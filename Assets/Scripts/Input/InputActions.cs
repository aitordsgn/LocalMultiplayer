//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Scripts/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Control"",
            ""id"": ""a66a3950-1d95-44cb-b63a-c23685f51661"",
            ""actions"": [
                {
                    ""name"": ""Mover"",
                    ""type"": ""Value"",
                    ""id"": ""8bb74257-9f9a-44f4-a312-6fcc70434c54"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pausa"",
                    ""type"": ""Button"",
                    ""id"": ""644b07c7-b228-4f70-a8e9-f36768140f56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""(A)"",
                    ""type"": ""Button"",
                    ""id"": ""f065fd32-c9b7-4c64-81fa-887e98a4e29e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""(B)"",
                    ""type"": ""Button"",
                    ""id"": ""b94b362c-9d22-4775-8b05-26659df51470"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""(X)"",
                    ""type"": ""Button"",
                    ""id"": ""ebc21039-31dd-43b5-a29e-f1b78ff8b501"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""(Y)"",
                    ""type"": ""Button"",
                    ""id"": ""cf70d243-f7af-41fb-aaa1-4ea4665527b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""04d9968f-6693-41bb-b372-afb34352af72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L"",
                    ""type"": ""Button"",
                    ""id"": ""c363b493-de52-47b9-8e30-d5dee5680aa8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""c94be977-b0c6-443b-9e63-6145bdf9ed2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8d42ba9f-6f52-4076-a697-f394a0c5a58f"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6046c93e-fc4e-45f4-9834-3d39fb522292"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12554d7a-7abe-474d-8313-52868b61bba1"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b646ecc-defc-41b0-a677-bbb1d7944042"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e33b4e5b-79f3-4c51-9d7d-7c33b86ca1a2"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""(B)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee6e6bf2-9671-4f04-affe-116cc81e0ba0"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""(X)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89e46f27-9d81-4532-b9b6-24e0e6eda8e5"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""(A)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""733d7b81-1e47-43e4-a06c-099499b5e461"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""(A)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6aa61726-3a0c-4fe7-9cd4-81a25ca37c7a"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bed774e6-9361-4edf-a8b8-68b57e005abd"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c5031a6-3ba3-42b0-9ac9-97b7945220ef"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""(Y)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b629885-cce4-45da-8e58-c9e996b659f4"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Tanque"",
            ""id"": ""8686af07-7eab-4efe-ae0a-af217e87b2a0"",
            ""actions"": [
                {
                    ""name"": ""Mover Tanque"",
                    ""type"": ""Value"",
                    ""id"": ""536edd97-62ab-4c41-be20-8d8d57679f00"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mover Torreta"",
                    ""type"": ""Value"",
                    ""id"": ""5682cde1-8379-4af7-8e57-6d5734081633"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""ScaleVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Disparar"",
                    ""type"": ""Button"",
                    ""id"": ""71e6832a-9f33-47ed-868d-2039ed9ddde1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pausa"",
                    ""type"": ""Button"",
                    ""id"": ""1d73e30d-53c7-444a-9a80-2b81d408385c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Frenar"",
                    ""type"": ""Button"",
                    ""id"": ""3321b2c8-a76f-4896-8996-a3db87f32eb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""becac38c-45d5-4fd1-96a1-9ca222107c5d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=-1)"",
                    ""groups"": """",
                    ""action"": ""Mover Tanque"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""507a5f24-3730-4e25-8b3a-03e4afa50891"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover Tanque"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fef55e03-b1d1-4c8c-9e82-37eebb5c0698"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover Tanque"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cf9817f4-8e47-42b6-bcb7-882deef46755"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover Tanque"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""df8e8ca4-2612-4b4a-aa20-70b8cc211983"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover Tanque"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""54aaed80-b039-4010-89ca-e4c7d79fdcbc"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover Tanque"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a09fb3f7-99e8-475f-b1e6-fec21a2ed13e"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover Torreta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72a8e93e-52b1-43ab-8a6d-3c1d61228b2c"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Disparar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce3acd6c-a68c-4d58-8aac-1ca3182cbda1"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""febeb2fb-c1a3-4fb7-965d-0534275afeb2"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Frenar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Any Key"",
            ""id"": ""0b2ad848-512c-4743-9acd-ab09c80213db"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""d93e194a-8461-4dc8-b57f-3945b77c9ed4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L"",
                    ""type"": ""Button"",
                    ""id"": ""c1c5b732-459b-4ecc-94b7-75223e719453"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""0cc55e70-2790-4f4f-9b46-f7a461a89cb4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""(Y)"",
                    ""type"": ""Button"",
                    ""id"": ""52c534a0-dfe4-4599-9c94-2d9c348d17f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""(X)"",
                    ""type"": ""Button"",
                    ""id"": ""fad69beb-d83a-434d-bea0-614bdaea2ba0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""(B)"",
                    ""type"": ""Button"",
                    ""id"": ""83b33f52-318a-4365-bb58-a0056c36659e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""(A)"",
                    ""type"": ""Button"",
                    ""id"": ""f0daedfb-62cc-4179-876e-20e573b6e539"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pausa"",
                    ""type"": ""Button"",
                    ""id"": ""f5bea576-2f5c-49bf-b12f-c5f453a0bc50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mover"",
                    ""type"": ""Value"",
                    ""id"": ""58ae9596-3c45-4a3c-be4e-21ae1331cef9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LStick"",
                    ""type"": ""Value"",
                    ""id"": ""1cd9e14e-65ed-4132-b7b2-ff27ec1ff341"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""ñ"",
                    ""id"": ""b984fd22-f1ba-4ce7-af3e-808453653d8a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": """",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""m"",
                    ""id"": ""9eb18b68-dc10-44d1-bfc9-41a68708408a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""l"",
                    ""id"": ""7e49fd66-4575-473f-909d-1cb457b32421"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""k"",
                    ""id"": ""d57ff765-e948-44a4-918c-84d30934f9f4"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""j"",
                    ""id"": ""a87ba894-5017-4654-9e0f-c9ac5e9790f1"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""i"",
                    ""id"": ""f6f3bbe8-7985-4d47-87cf-4e57c51c8891"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""g"",
                    ""id"": ""e205e30c-a2ff-47f6-8bb0-5b51c2e502f3"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""(A)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""h"",
                    ""id"": ""b7dfb07b-6dae-4298-a64e-8f9a3c73db71"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""(A)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""f"",
                    ""id"": ""aa71e9cf-e933-4507-8ee9-c0e97890d63e"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""(B)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""e"",
                    ""id"": ""1078c78c-d0e6-4a4d-9c06-e12882e788ae"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""(X)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""d"",
                    ""id"": ""09b8879f-cb42-442b-a359-46bc26d81e83"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""(Y)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""c"",
                    ""id"": ""9c4312e6-83e8-4fb9-836a-70b89cc3bc17"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""b"",
                    ""id"": ""29ed9c40-c487-4996-8a37-5d010faaf5b4"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""a"",
                    ""id"": ""a0edbba5-0fa1-4bc1-8ed0-0d698b5e1ed8"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9335d9f1-e181-420c-a79d-4d9303647249"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Plataformas"",
            ""id"": ""39387e30-250c-4bc2-9e7a-a0272709ecfa"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c04ee833-bbf4-408b-873b-f176b799a149"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f90b27a7-301b-4243-ba25-869c7182f8a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9439a210-c4d4-467d-b2ed-4e5679bb1f97"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4030c45e-aad1-4402-8057-d184f44f619b"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""84ee6ff4-a4a8-4627-b175-2d7699e04a65"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""865553ce-4fa5-4895-84d3-f10ac9356869"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""23d02b99-155d-4af6-a560-ec79d2f68a66"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""67bcf8cc-e59d-471b-bbb3-9a54bac10e42"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e8b6db40-0303-438c-8dac-16696d281699"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2f8d4ba4-9758-4abb-91bf-fa5132c98cff"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98600a8a-0560-45ac-b0d0-2acae9be1c0c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Control
        m_Control = asset.FindActionMap("Control", throwIfNotFound: true);
        m_Control_Mover = m_Control.FindAction("Mover", throwIfNotFound: true);
        m_Control_Pausa = m_Control.FindAction("Pausa", throwIfNotFound: true);
        m_Control_A = m_Control.FindAction("(A)", throwIfNotFound: true);
        m_Control_B = m_Control.FindAction("(B)", throwIfNotFound: true);
        m_Control_X = m_Control.FindAction("(X)", throwIfNotFound: true);
        m_Control_Y = m_Control.FindAction("(Y)", throwIfNotFound: true);
        m_Control_R = m_Control.FindAction("R", throwIfNotFound: true);
        m_Control_L = m_Control.FindAction("L", throwIfNotFound: true);
        m_Control_Select = m_Control.FindAction("Select", throwIfNotFound: true);
        // Tanque
        m_Tanque = asset.FindActionMap("Tanque", throwIfNotFound: true);
        m_Tanque_MoverTanque = m_Tanque.FindAction("Mover Tanque", throwIfNotFound: true);
        m_Tanque_MoverTorreta = m_Tanque.FindAction("Mover Torreta", throwIfNotFound: true);
        m_Tanque_Disparar = m_Tanque.FindAction("Disparar", throwIfNotFound: true);
        m_Tanque_Pausa = m_Tanque.FindAction("Pausa", throwIfNotFound: true);
        m_Tanque_Frenar = m_Tanque.FindAction("Frenar", throwIfNotFound: true);
        // Any Key
        m_AnyKey = asset.FindActionMap("Any Key", throwIfNotFound: true);
        m_AnyKey_Select = m_AnyKey.FindAction("Select", throwIfNotFound: true);
        m_AnyKey_L = m_AnyKey.FindAction("L", throwIfNotFound: true);
        m_AnyKey_R = m_AnyKey.FindAction("R", throwIfNotFound: true);
        m_AnyKey_Y = m_AnyKey.FindAction("(Y)", throwIfNotFound: true);
        m_AnyKey_X = m_AnyKey.FindAction("(X)", throwIfNotFound: true);
        m_AnyKey_B = m_AnyKey.FindAction("(B)", throwIfNotFound: true);
        m_AnyKey_A = m_AnyKey.FindAction("(A)", throwIfNotFound: true);
        m_AnyKey_Pausa = m_AnyKey.FindAction("Pausa", throwIfNotFound: true);
        m_AnyKey_Mover = m_AnyKey.FindAction("Mover", throwIfNotFound: true);
        m_AnyKey_LStick = m_AnyKey.FindAction("LStick", throwIfNotFound: true);
        // Plataformas
        m_Plataformas = asset.FindActionMap("Plataformas", throwIfNotFound: true);
        m_Plataformas_Movement = m_Plataformas.FindAction("Movement", throwIfNotFound: true);
        m_Plataformas_Jump = m_Plataformas.FindAction("Jump", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Control
    private readonly InputActionMap m_Control;
    private IControlActions m_ControlActionsCallbackInterface;
    private readonly InputAction m_Control_Mover;
    private readonly InputAction m_Control_Pausa;
    private readonly InputAction m_Control_A;
    private readonly InputAction m_Control_B;
    private readonly InputAction m_Control_X;
    private readonly InputAction m_Control_Y;
    private readonly InputAction m_Control_R;
    private readonly InputAction m_Control_L;
    private readonly InputAction m_Control_Select;
    public struct ControlActions
    {
        private @InputActions m_Wrapper;
        public ControlActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mover => m_Wrapper.m_Control_Mover;
        public InputAction @Pausa => m_Wrapper.m_Control_Pausa;
        public InputAction @A => m_Wrapper.m_Control_A;
        public InputAction @B => m_Wrapper.m_Control_B;
        public InputAction @X => m_Wrapper.m_Control_X;
        public InputAction @Y => m_Wrapper.m_Control_Y;
        public InputAction @R => m_Wrapper.m_Control_R;
        public InputAction @L => m_Wrapper.m_Control_L;
        public InputAction @Select => m_Wrapper.m_Control_Select;
        public InputActionMap Get() { return m_Wrapper.m_Control; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControlActions set) { return set.Get(); }
        public void SetCallbacks(IControlActions instance)
        {
            if (m_Wrapper.m_ControlActionsCallbackInterface != null)
            {
                @Mover.started -= m_Wrapper.m_ControlActionsCallbackInterface.OnMover;
                @Mover.performed -= m_Wrapper.m_ControlActionsCallbackInterface.OnMover;
                @Mover.canceled -= m_Wrapper.m_ControlActionsCallbackInterface.OnMover;
                @Pausa.started -= m_Wrapper.m_ControlActionsCallbackInterface.OnPausa;
                @Pausa.performed -= m_Wrapper.m_ControlActionsCallbackInterface.OnPausa;
                @Pausa.canceled -= m_Wrapper.m_ControlActionsCallbackInterface.OnPausa;
                @A.started -= m_Wrapper.m_ControlActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_ControlActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_ControlActionsCallbackInterface.OnA;
                @B.started -= m_Wrapper.m_ControlActionsCallbackInterface.OnB;
                @B.performed -= m_Wrapper.m_ControlActionsCallbackInterface.OnB;
                @B.canceled -= m_Wrapper.m_ControlActionsCallbackInterface.OnB;
                @X.started -= m_Wrapper.m_ControlActionsCallbackInterface.OnX;
                @X.performed -= m_Wrapper.m_ControlActionsCallbackInterface.OnX;
                @X.canceled -= m_Wrapper.m_ControlActionsCallbackInterface.OnX;
                @Y.started -= m_Wrapper.m_ControlActionsCallbackInterface.OnY;
                @Y.performed -= m_Wrapper.m_ControlActionsCallbackInterface.OnY;
                @Y.canceled -= m_Wrapper.m_ControlActionsCallbackInterface.OnY;
                @R.started -= m_Wrapper.m_ControlActionsCallbackInterface.OnR;
                @R.performed -= m_Wrapper.m_ControlActionsCallbackInterface.OnR;
                @R.canceled -= m_Wrapper.m_ControlActionsCallbackInterface.OnR;
                @L.started -= m_Wrapper.m_ControlActionsCallbackInterface.OnL;
                @L.performed -= m_Wrapper.m_ControlActionsCallbackInterface.OnL;
                @L.canceled -= m_Wrapper.m_ControlActionsCallbackInterface.OnL;
                @Select.started -= m_Wrapper.m_ControlActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_ControlActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_ControlActionsCallbackInterface.OnSelect;
            }
            m_Wrapper.m_ControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Mover.started += instance.OnMover;
                @Mover.performed += instance.OnMover;
                @Mover.canceled += instance.OnMover;
                @Pausa.started += instance.OnPausa;
                @Pausa.performed += instance.OnPausa;
                @Pausa.canceled += instance.OnPausa;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @B.started += instance.OnB;
                @B.performed += instance.OnB;
                @B.canceled += instance.OnB;
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
                @Y.started += instance.OnY;
                @Y.performed += instance.OnY;
                @Y.canceled += instance.OnY;
                @R.started += instance.OnR;
                @R.performed += instance.OnR;
                @R.canceled += instance.OnR;
                @L.started += instance.OnL;
                @L.performed += instance.OnL;
                @L.canceled += instance.OnL;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
            }
        }
    }
    public ControlActions @Control => new ControlActions(this);

    // Tanque
    private readonly InputActionMap m_Tanque;
    private ITanqueActions m_TanqueActionsCallbackInterface;
    private readonly InputAction m_Tanque_MoverTanque;
    private readonly InputAction m_Tanque_MoverTorreta;
    private readonly InputAction m_Tanque_Disparar;
    private readonly InputAction m_Tanque_Pausa;
    private readonly InputAction m_Tanque_Frenar;
    public struct TanqueActions
    {
        private @InputActions m_Wrapper;
        public TanqueActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoverTanque => m_Wrapper.m_Tanque_MoverTanque;
        public InputAction @MoverTorreta => m_Wrapper.m_Tanque_MoverTorreta;
        public InputAction @Disparar => m_Wrapper.m_Tanque_Disparar;
        public InputAction @Pausa => m_Wrapper.m_Tanque_Pausa;
        public InputAction @Frenar => m_Wrapper.m_Tanque_Frenar;
        public InputActionMap Get() { return m_Wrapper.m_Tanque; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TanqueActions set) { return set.Get(); }
        public void SetCallbacks(ITanqueActions instance)
        {
            if (m_Wrapper.m_TanqueActionsCallbackInterface != null)
            {
                @MoverTanque.started -= m_Wrapper.m_TanqueActionsCallbackInterface.OnMoverTanque;
                @MoverTanque.performed -= m_Wrapper.m_TanqueActionsCallbackInterface.OnMoverTanque;
                @MoverTanque.canceled -= m_Wrapper.m_TanqueActionsCallbackInterface.OnMoverTanque;
                @MoverTorreta.started -= m_Wrapper.m_TanqueActionsCallbackInterface.OnMoverTorreta;
                @MoverTorreta.performed -= m_Wrapper.m_TanqueActionsCallbackInterface.OnMoverTorreta;
                @MoverTorreta.canceled -= m_Wrapper.m_TanqueActionsCallbackInterface.OnMoverTorreta;
                @Disparar.started -= m_Wrapper.m_TanqueActionsCallbackInterface.OnDisparar;
                @Disparar.performed -= m_Wrapper.m_TanqueActionsCallbackInterface.OnDisparar;
                @Disparar.canceled -= m_Wrapper.m_TanqueActionsCallbackInterface.OnDisparar;
                @Pausa.started -= m_Wrapper.m_TanqueActionsCallbackInterface.OnPausa;
                @Pausa.performed -= m_Wrapper.m_TanqueActionsCallbackInterface.OnPausa;
                @Pausa.canceled -= m_Wrapper.m_TanqueActionsCallbackInterface.OnPausa;
                @Frenar.started -= m_Wrapper.m_TanqueActionsCallbackInterface.OnFrenar;
                @Frenar.performed -= m_Wrapper.m_TanqueActionsCallbackInterface.OnFrenar;
                @Frenar.canceled -= m_Wrapper.m_TanqueActionsCallbackInterface.OnFrenar;
            }
            m_Wrapper.m_TanqueActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoverTanque.started += instance.OnMoverTanque;
                @MoverTanque.performed += instance.OnMoverTanque;
                @MoverTanque.canceled += instance.OnMoverTanque;
                @MoverTorreta.started += instance.OnMoverTorreta;
                @MoverTorreta.performed += instance.OnMoverTorreta;
                @MoverTorreta.canceled += instance.OnMoverTorreta;
                @Disparar.started += instance.OnDisparar;
                @Disparar.performed += instance.OnDisparar;
                @Disparar.canceled += instance.OnDisparar;
                @Pausa.started += instance.OnPausa;
                @Pausa.performed += instance.OnPausa;
                @Pausa.canceled += instance.OnPausa;
                @Frenar.started += instance.OnFrenar;
                @Frenar.performed += instance.OnFrenar;
                @Frenar.canceled += instance.OnFrenar;
            }
        }
    }
    public TanqueActions @Tanque => new TanqueActions(this);

    // Any Key
    private readonly InputActionMap m_AnyKey;
    private IAnyKeyActions m_AnyKeyActionsCallbackInterface;
    private readonly InputAction m_AnyKey_Select;
    private readonly InputAction m_AnyKey_L;
    private readonly InputAction m_AnyKey_R;
    private readonly InputAction m_AnyKey_Y;
    private readonly InputAction m_AnyKey_X;
    private readonly InputAction m_AnyKey_B;
    private readonly InputAction m_AnyKey_A;
    private readonly InputAction m_AnyKey_Pausa;
    private readonly InputAction m_AnyKey_Mover;
    private readonly InputAction m_AnyKey_LStick;
    public struct AnyKeyActions
    {
        private @InputActions m_Wrapper;
        public AnyKeyActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Select => m_Wrapper.m_AnyKey_Select;
        public InputAction @L => m_Wrapper.m_AnyKey_L;
        public InputAction @R => m_Wrapper.m_AnyKey_R;
        public InputAction @Y => m_Wrapper.m_AnyKey_Y;
        public InputAction @X => m_Wrapper.m_AnyKey_X;
        public InputAction @B => m_Wrapper.m_AnyKey_B;
        public InputAction @A => m_Wrapper.m_AnyKey_A;
        public InputAction @Pausa => m_Wrapper.m_AnyKey_Pausa;
        public InputAction @Mover => m_Wrapper.m_AnyKey_Mover;
        public InputAction @LStick => m_Wrapper.m_AnyKey_LStick;
        public InputActionMap Get() { return m_Wrapper.m_AnyKey; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AnyKeyActions set) { return set.Get(); }
        public void SetCallbacks(IAnyKeyActions instance)
        {
            if (m_Wrapper.m_AnyKeyActionsCallbackInterface != null)
            {
                @Select.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnSelect;
                @L.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnL;
                @L.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnL;
                @L.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnL;
                @R.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnR;
                @R.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnR;
                @R.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnR;
                @Y.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnY;
                @Y.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnY;
                @Y.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnY;
                @X.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnX;
                @X.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnX;
                @X.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnX;
                @B.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnB;
                @B.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnB;
                @B.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnB;
                @A.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnA;
                @Pausa.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnPausa;
                @Pausa.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnPausa;
                @Pausa.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnPausa;
                @Mover.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnMover;
                @Mover.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnMover;
                @Mover.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnMover;
                @LStick.started -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnLStick;
                @LStick.performed -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnLStick;
                @LStick.canceled -= m_Wrapper.m_AnyKeyActionsCallbackInterface.OnLStick;
            }
            m_Wrapper.m_AnyKeyActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @L.started += instance.OnL;
                @L.performed += instance.OnL;
                @L.canceled += instance.OnL;
                @R.started += instance.OnR;
                @R.performed += instance.OnR;
                @R.canceled += instance.OnR;
                @Y.started += instance.OnY;
                @Y.performed += instance.OnY;
                @Y.canceled += instance.OnY;
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
                @B.started += instance.OnB;
                @B.performed += instance.OnB;
                @B.canceled += instance.OnB;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @Pausa.started += instance.OnPausa;
                @Pausa.performed += instance.OnPausa;
                @Pausa.canceled += instance.OnPausa;
                @Mover.started += instance.OnMover;
                @Mover.performed += instance.OnMover;
                @Mover.canceled += instance.OnMover;
                @LStick.started += instance.OnLStick;
                @LStick.performed += instance.OnLStick;
                @LStick.canceled += instance.OnLStick;
            }
        }
    }
    public AnyKeyActions @AnyKey => new AnyKeyActions(this);

    // Plataformas
    private readonly InputActionMap m_Plataformas;
    private IPlataformasActions m_PlataformasActionsCallbackInterface;
    private readonly InputAction m_Plataformas_Movement;
    private readonly InputAction m_Plataformas_Jump;
    public struct PlataformasActions
    {
        private @InputActions m_Wrapper;
        public PlataformasActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Plataformas_Movement;
        public InputAction @Jump => m_Wrapper.m_Plataformas_Jump;
        public InputActionMap Get() { return m_Wrapper.m_Plataformas; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlataformasActions set) { return set.Get(); }
        public void SetCallbacks(IPlataformasActions instance)
        {
            if (m_Wrapper.m_PlataformasActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlataformasActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlataformasActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlataformasActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_PlataformasActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlataformasActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlataformasActionsCallbackInterface.OnJump;
            }
            m_Wrapper.m_PlataformasActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
            }
        }
    }
    public PlataformasActions @Plataformas => new PlataformasActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IControlActions
    {
        void OnMover(InputAction.CallbackContext context);
        void OnPausa(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnB(InputAction.CallbackContext context);
        void OnX(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
        void OnR(InputAction.CallbackContext context);
        void OnL(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
    public interface ITanqueActions
    {
        void OnMoverTanque(InputAction.CallbackContext context);
        void OnMoverTorreta(InputAction.CallbackContext context);
        void OnDisparar(InputAction.CallbackContext context);
        void OnPausa(InputAction.CallbackContext context);
        void OnFrenar(InputAction.CallbackContext context);
    }
    public interface IAnyKeyActions
    {
        void OnSelect(InputAction.CallbackContext context);
        void OnL(InputAction.CallbackContext context);
        void OnR(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
        void OnX(InputAction.CallbackContext context);
        void OnB(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnPausa(InputAction.CallbackContext context);
        void OnMover(InputAction.CallbackContext context);
        void OnLStick(InputAction.CallbackContext context);
    }
    public interface IPlataformasActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
}
